{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      "Bash(curl:*)",
      "Bash(sudo sh:*)",
      "Bash(snap list:*)",
      "Bash(node:*)",
      "Bash(psql:*)",
      "Bash(apt list:*)",
      "Bash(chmod:*)",
      "Bash(./start-sara.sh:*)",
      "Bash(python3:*)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(npm run dev:*)",
      "Bash(find:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(pip install:*)",
      "Bash(PYTHONPATH=/home/david/jarvis/backend python3 -m app.main)",
      "Bash(npm install:*)",
      "Bash(docker:*)",
      "Bash(export OPENAI_MODEL=gpt-oss:120b)",
      "Bash(export OPENAI_API_KEY=dummy)",
      "Bash(export EMBEDDING_BASE_URL=http://100.104.68.115:11434)",
      "Bash(export EMBEDDING_MODEL=bge-m3)",
      "Bash(export EMBEDDING_DIM=1024)",
      "Bash(export ASSISTANT_NAME=Sara)",
      "Bash(rm:*)",
      "Bash(grep:*)",
      "Bash(sudo systemctl status:*)",
      "Bash(ss:*)",
      "Bash(sudo docker-compose:*)",
      "Bash(sh:*)",
      "Bash(systemctl:*)",
      "Bash(newgrp:*)",
      "Bash(sudo usermod:*)",
      "Bash(sg docker:*)",
      "Bash(npm run build:*)",
      "Bash(source:*)",
      "Bash(NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret python3 migrate_to_neo4j.py)",
      "Bash(NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret DATABASE_URL=\"postgresql+psycopg://sara:sara123@10.185.1.180:5432/sara_hub\" python3 app/main_simple.py)",
      "Bash(pkill -f \"python.*main_simple.py\")",
      "Bash(NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret DATABASE_URL=\"postgresql+psycopg://sara:sara123@10.185.1.180:5432/sara_hub\" OPENAI_BASE_URL=http://100.104.68.115:11434/v1 OPENAI_MODEL=gpt-oss:120b OPENAI_API_KEY=dummy EMBEDDING_BASE_URL=http://100.104.68.115:11434 EMBEDDING_MODEL=bge-m3 EMBEDDING_DIM=1024 ASSISTANT_NAME=Sara python3 app/main_simple.py)",
      "Bash(PYTHONPATH=/home/david/jarvis/backend NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret DATABASE_URL=\"postgresql+psycopg://sara:sara123@10.185.1.180:5432/sara_hub\" OPENAI_BASE_URL=http://100.104.68.115:11434/v1 OPENAI_MODEL=gpt-oss:120b OPENAI_API_KEY=dummy EMBEDDING_BASE_URL=http://100.104.68.115:11434 EMBEDDING_MODEL=bge-m3 EMBEDDING_DIM=1024 ASSISTANT_NAME=Sara python3 backend/app/main_simple.py)",
      "Bash(PYTHONPATH=/home/david/jarvis/backend NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret DATABASE_URL=\"postgresql+psycopg://sara:sara123@10.185.1.180:5432/sara_hub\" python3 cleanup_orphaned_neo4j_data.py --confirm --force)",
      "Bash(PYTHONPATH=/home/david/jarvis/backend NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret DATABASE_URL=\"postgresql+psycopg://sara:sara123@10.185.1.180:5432/sara_hub\" python3 data_consistency_check.py)",
      "Bash(PYTHONPATH=/home/david/jarvis/backend NEO4J_URI=bolt://10.185.1.180:7687 NEO4J_USER=neo4j NEO4J_PASSWORD=sara-graph-secret python3 -c \"\nimport asyncio\nimport sys\nsys.path.insert(0, ''/home/david/jarvis/backend'')\n\nfrom app.services.content_intelligence import content_intelligence\nfrom app.services.metadata_extractor import metadata_extractor\nfrom app.services.tagging_system import smart_tagger\nfrom app.services.enhanced_neo4j_schema import enhanced_neo4j\n\nasync def test_schema_only():\n    print(''üîß Testing Enhanced Neo4j Schema Setup...'')\n    \n    # Initialize enhanced schema\n    try:\n        await enhanced_neo4j.initialize_enhanced_schema()\n        print(''‚úÖ Enhanced Neo4j schema initialized successfully!'')\n        \n        # Test content processing pipeline\n        test_content = ''''''## Beef Stew Recipe\n        \n- 2 lb chuck roast\n- 4 potatoes\n- 2 carrots\n- 1 onion\n\n## Instructions\n1. Brown the meat\n2. Add vegetables\n3. Pressure cook for 30 minutes\n\nTODO: Buy groceries this weekend''''''\n        \n        title = ''Test Beef Stew Recipe''\n        \n        # Run intelligence pipeline\n        print(''üß† Running content intelligence...'')\n        content_type, chunks = content_intelligence.process_content(test_content, title)\n        print(f''   ‚úÖ Type: {content_type.value}, Chunks: {len(chunks)}'')\n        \n        metadata = metadata_extractor.extract_metadata(test_content, content_type, title)\n        print(f''   ‚úÖ Entities: {len(metadata.entities)}, Topics: {len(metadata.topics)}'')\n        \n        tags = smart_tagger.generate_tags(test_content, metadata, content_type, title)\n        print(f''   ‚úÖ Tags: {len(tags)} generated'')\n        \n        print(''üéâ Content intelligence pipeline working perfectly!'')\n        print(''‚úÖ Enhanced schema ready for Phase 2!'')\n        \n    except Exception as e:\n        print(f''‚ùå Schema test failed: {e}'')\n        import traceback\n        traceback.print_exc()\n\nasyncio.run(test_schema_only())\n\")",
      "Bash(timedatectl:*)",
      "Bash(PYTHONPATH=/home/david/jarvis/backend SARA_USER_EMAIL=\"david@avery.cloud\" SARA_USER_PASSWORD=\"Nutman17!\" API_BASE_URL=\"http://10.185.1.180:8000\" timeout 180 /usr/bin/python3 /home/david/jarvis/scripts/generate_daily_vulnerability_report.py)",
      "Bash(PYTHONPATH:*)",
      "Bash(alembic init:*)",
      "Bash(alembic revision:*)",
      "Bash(alembic upgrade:*)",
      "Bash(crontab:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(/usr/bin/python3:*)",
      "Bash(VITE_API_URL=http://10.185.1.180:8000 npm run dev -- --port 3001 --host 10.185.1.180 --force)",
      "Bash(VITE_API_URL=http://10.185.1.180:8000 npm run dev -- --port 3000 --host 10.185.1.180)",
      "Bash(npx serve:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/usr/bin",
      "/run"
    ]
  }
}