"""Add habit tracking tables

Revision ID: 70161b318c97
Revises: 
Create Date: 2025-08-21 22:42:48.298499

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
try:
    from pgvector.sqlalchemy import Vector
    import pgvector.sqlalchemy.vector
    PGVECTOR_AVAILABLE = True
except ImportError:
    PGVECTOR_AVAILABLE = False


# revision identifiers, used by Alembic.
revision: str = '70161b318c97'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_outbox',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('aggregate_type', sa.String(), nullable=False),
    sa.Column('aggregate_id', sa.String(), nullable=False),
    sa.Column('op', sa.String(), nullable=False),
    sa.Column('payload', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habit_instances',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('habit_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('window', sa.Text(), nullable=True),
    sa.Column('expected', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('target', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habit_items',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('habit_id', sa.String(), nullable=False),
    sa.Column('label', sa.Text(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habit_links',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('habit_id', sa.String(), nullable=False),
    sa.Column('target_type', sa.String(), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('meta', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habit_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('habit_id', sa.String(), nullable=False),
    sa.Column('instance_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('ts', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('payload', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habit_streaks',
    sa.Column('habit_id', sa.String(), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('best_streak', sa.Integer(), nullable=True),
    sa.Column('last_completed', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('habit_id')
    )
    op.create_table('habits',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('target_numeric', sa.Float(), nullable=True),
    sa.Column('unit', sa.Text(), nullable=True),
    sa.Column('rrule', sa.Text(), nullable=False),
    sa.Column('weekly_minimum', sa.Integer(), nullable=True),
    sa.Column('monthly_minimum', sa.Integer(), nullable=True),
    sa.Column('windows', sa.Text(), nullable=True),
    sa.Column('checklist_mode', sa.String(), nullable=True),
    sa.Column('checklist_threshold', sa.Float(), nullable=True),
    sa.Column('grace_days', sa.Integer(), nullable=True),
    sa.Column('retro_hours', sa.Integer(), nullable=True),
    sa.Column('paused', sa.Integer(), nullable=True),
    sa.Column('pause_from', sa.DateTime(), nullable=True),
    sa.Column('pause_to', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('conversation_turn', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('document_chunk', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('episode', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               type_=sa.Text(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('episode', 'embedding',
               existing_type=sa.Text(),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               existing_nullable=True)
    op.alter_column('document_chunk', 'embedding',
               existing_type=sa.Text(),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               existing_nullable=True)
    op.alter_column('conversation_turn', 'embedding',
               existing_type=sa.Text(),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=1024),
               existing_nullable=True)
    op.drop_table('habits')
    op.drop_table('habit_streaks')
    op.drop_table('habit_logs')
    op.drop_table('habit_links')
    op.drop_table('habit_items')
    op.drop_table('habit_instances')
    op.drop_table('event_outbox')
    # ### end Alembic commands ###
